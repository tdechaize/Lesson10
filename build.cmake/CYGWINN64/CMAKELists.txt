#-------------------------------------------------------------------------------------
cmake_minimum_required(VERSION 3.9.1)
# Toolchain File

# The target of this operating systems is 
# SET(CMAKE_SYSTEM_NAME CYGWIN)
# set(CMAKE_CXX_EXTENSIONS  ON)

# here is the target environment located
SET(CMAKE_FIND_ROOT_PATH  "C:/cygwin64/bin" )

# which compilers to use for C and C++
SET(CMAKE_C_COMPILER "gcc.exe" )
#SET(CMAKE_CXX_COMPILER "g++.exe" )
SET(CMAKE_RC_COMPILER "windres.exe" )

message(STATUS "Setting GCC flags to compile and link")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64 -D_WIN64")
# set(CMAKE_RC_FLAGS "${CMAKE_RC_FLAGS} ")
set(CMAKE_LINK_FLAGS "${CMAKE_LINK_FLAGS} -mwindows")

include_directories(BEFORE "C:/cygwin64/usr/include" BEFORE "C:/cygwin64/usr/include/w32api" )

if(${CMAKE_BUILD_TYPE} MATCHES Debug)
    message("CMAKE Debug Build for GCC 64 bit natif included in CYGWIN64")
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -g -DDEBUG -D_DEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Debug")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Debug")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Debug")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
elseif(${CMAKE_BUILD_TYPE} MATCHES Release)
    message("CMAKE Release Build for GCC 64 bits natif included in CYGWIN64")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O2 -s -DNDEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Release")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Release")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binCYGWINN64/Release")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
endif()

file(GLOB SRC_FILES src/*.c src/*.rc)
# set(APPLI ${NAME_APPLI})

project(${NAME_APPLI}
        VERSION 1.0.0
        LANGUAGES C)
add_executable(${PROJECT_NAME} ${SRC_FILES})

if(CMAKE_SYSTEM_NAME MATCHES "CYGWIN")
	message("cygwin variable: ${CYGWIN}")
endif()

target_link_directories(${PROJECT_NAME} PUBLIC "C:/cygwin64/lib" PUBLIC "C:/cygwin64/lib/w32api")
target_link_libraries(${PROJECT_NAME} PUBLIC "glu32" "opengl32" "user32" "advapi32" "comdlg32" "winmm" "gdi32" "shell32" "kernel32")
#-------------------------------------------------------------------------------------
